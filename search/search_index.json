{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mini C# \u00b6 This is an implementation of a subset of C# in the Spoofax Language Workbench . Its syntax is declared in SDF3, and its semantics are declared in Statix. This version only supports the syntactic and semantic analysis, and can neither run nor produce a C# class file. The implementation is based on the ECMA-334 standard . Features \u00b6 The following features are demonstrated in Mini C#: class declarations class inheritance instance field and method declarations static field and method declarations references to local variables, arguments, this , base , (inherited/static) fields, and (inherited/static) methods Unsupported Features \u00b6 Most features of C# are not supported in Mini C#, but the following are explicitly not implemented: interface extension method overloading generics extension methods abstract/sealed classes virtual/new/abstract methods nullable types Scope Graph \u00b6 A class declaration gets two scopes: a classScope , which contains the static members of the class, and an instanceScope , which contains the instance member of the class. The instanceScope has a P edge to the classScope , which has a P edge to the global scope. Backlog \u00b6 The following aspects have been implemented: Class declarations Class Inheritance Fields Instance Static New Methods Instance Static Override New Overloading Statements Variable declarations Typed Typed and initialized Untyped and initialized Variable assignments If statements Return statements Expressions this base Variable and member references Function calls Constructors Member accessors Boolean operators Integer operators Ternary conditional operator","title":"Mini C# #"},{"location":"#mini-c","text":"This is an implementation of a subset of C# in the Spoofax Language Workbench . Its syntax is declared in SDF3, and its semantics are declared in Statix. This version only supports the syntactic and semantic analysis, and can neither run nor produce a C# class file. The implementation is based on the ECMA-334 standard .","title":"Mini C#"},{"location":"#features","text":"The following features are demonstrated in Mini C#: class declarations class inheritance instance field and method declarations static field and method declarations references to local variables, arguments, this , base , (inherited/static) fields, and (inherited/static) methods","title":"Features"},{"location":"#unsupported-features","text":"Most features of C# are not supported in Mini C#, but the following are explicitly not implemented: interface extension method overloading generics extension methods abstract/sealed classes virtual/new/abstract methods nullable types","title":"Unsupported Features"},{"location":"#scope-graph","text":"A class declaration gets two scopes: a classScope , which contains the static members of the class, and an instanceScope , which contains the instance member of the class. The instanceScope has a P edge to the classScope , which has a P edge to the global scope.","title":"Scope Graph"},{"location":"#backlog","text":"The following aspects have been implemented: Class declarations Class Inheritance Fields Instance Static New Methods Instance Static Override New Overloading Statements Variable declarations Typed Typed and initialized Untyped and initialized Variable assignments If statements Return statements Expressions this base Variable and member references Function calls Constructors Member accessors Boolean operators Integer operators Ternary conditional operator","title":"Backlog"},{"location":"class-declarations/","text":"Class Declarations \u00b6 A simple class declaration: class A { } A class declaration with inheritance: class A { } class B : A { } class C : B { } Cyclic inheritance Direct cyclic inheritance is not allowed: class C : C { } Indirect cyclic inheritance is also not allowed: class B : C { } class C : B { }","title":"Class Declarations"},{"location":"class-declarations/#class-declarations","text":"A simple class declaration: class A { } A class declaration with inheritance: class A { } class B : A { } class C : B { } Cyclic inheritance Direct cyclic inheritance is not allowed: class C : C { } Indirect cyclic inheritance is also not allowed: class B : C { } class C : B { }","title":"Class Declarations"}]}

class Node {
    public object Value;
    public Node Left;
    public Node Right;
    public Test t;

    public Node N() {
        return t.n.t.n.T().n.N().t.n;
    }
    public Test T() {
        return t.n.t.n.T().n.Left.t;
    }

    public int CalcHeight() {
        return 1 + (Left != null ? Left.CalcHeight() : 0);
    }
}

class Test {
    public Node n;
    public Node BuildTree() {
        Node n = new Node();
        Test t = new Test();
      return $Exp;
    }
    public Node BuildNode(int depth) {
        return new Node();
    }
}

class Node2 {
    public object Value;
    public Node Left;
    public Node Right;

//    public int CalcHeight() {
//        return 1 + Math.Max(
//          Left != null ? Left.CalcHeight() : 0,
//          Right != null ? Right.CalcHeight() : 0
//        );
//    }
}
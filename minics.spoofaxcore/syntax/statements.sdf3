module statements

imports
  Common
  expressions
  types

context-free sorts
  Stmt

context-free syntax

  Stmt.Block = <
  {
    <{Stmt "\n"}*>
  }>
//  Stmt.Seq = <
//    <Stmt>
//    <Stmt>
//  > {right}

  Stmt.Nop = <;>
  Stmt.Exp = <<Exp>;>

  Stmt.DeclareTypedVar = <<Type> <ID>;>
  Stmt.DeclareTypedVarInit = <<Type> <ID> = <Exp>;>
  Stmt.DeclareVarInit = <var <ID> = <Exp>;>

  Stmt.Assign = <<ID> = <Exp>;>
  Stmt.If = <
    if (<Exp>)
      <Stmt>
    else
      <Stmt>
  >
  Stmt.Return = <return <Exp>;>

context-free priorities
    Stmt.If
//  > Stmt.Seq

template options

  ID = keyword {reject}
  keyword -/- [A-Za-z0-9]



module classes

imports
  Common
  types
  statements

context-free sorts
  UsingDecl ClassDecl MemberDecl ParamDecl ParentDecl

context-free syntax

  UsingDecl.Using = <using <ID>;>

  ClassDecl.Class = <
    class <ID><ParentDecl> {
      <{MemberDecl "\n"}*>
    }
  >

  MemberDecl.InstanceField = <public <Type> <ID>;>
  MemberDecl.StaticField = <public static <Type> <ID>;>
  MemberDecl.NewField = <public new <Type> <ID>;>

  MemberDecl.InstanceMethod = <
    public <Type> <ID>(<{ParamDecl ", "}*>) {
        <{Stmt "\n"}*>
    }
  >
  MemberDecl.OverrideMethod = <
    public override <Type> <ID>(<{ParamDecl ", "}*>) {
        <{Stmt "\n"}*>
    }
  >
  MemberDecl.StaticMethod = <
    public static <Type> <ID>(<{ParamDecl ", "}*>) {
        <{Stmt "\n"}*>
    }
  >
  MemberDecl.NewMethod = <
    public new <Type> <ID>(<{ParamDecl ", "}*>) {
        <{Stmt "\n"}*>
    }
  >

  ParamDecl.Param = <<Type> <ID>>

  ParentDecl.NoParent = <>
  ParentDecl.Parent = < : <ID>>


template options

  ID = keyword {reject}
  keyword -/- [A-Za-z0-9]

